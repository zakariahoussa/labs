AWSTemplateFormatVersion: 2010-09-09
Description: Continuous deployment infrastructure for sample calculator application
Parameters:
  CodeCommitRepoName:
    Description: >-
      A CodeCommit repository that contains the application code. Must be in
      same region as this stack.
    Type: String
    Default: Lab6
  LabCodeBucket:
    Description: >-
      The name of the S3 bucket that contains the source artifact, which must be
      in the same region as this stack
    Type: String
    Default: sp01890-code
  LambdaS3Key:
    Default: functions/functions.zip
    Description: 'The file name of the source artifact, such as myfolder/myartifact.zip'
    Type: String
  SubnetId:
    Description: SubnetId
    Type: String
    Default: subnet-1021014a

Outputs:
  PipelineConsoleUrl:
    Description: Console URL for the CodePipeline pipleine
    Export:
      Name: !Join 
        - '-'
        - - !Ref 'AWS::StackName'
          - !Ref 'AWS::Region'
          - PipelineCloneUrl
    Value: !Join 
      - ''
      - - 'https://'
        - !Ref 'AWS::Region'
        - .console.aws.amazon.com/codepipeline/home?region=
        - !Ref 'AWS::Region'
        - '#/view/'
        - !Ref 'AWS::StackName'
  ArtifactsBucket:
    Description: S3 bucket used for artifacts
    Export:
      Name: !Join 
        - '-'
        - - !Ref 'AWS::StackName'
          - !Ref 'AWS::Region'
          - ArtifactsBucket
    Value: !Ref ArtifactsBucket
Resources:
  CodeCommitRepo:
    Type: 'AWS::CodeCommit::Repository'
    Description: Creating AWS CodeCommit repository for application source code
    Properties:
      RepositoryName: !Ref CodeCommitRepoName
      RepositoryDescription: Calculator application repository
      Code:
        S3:
          Bucket: !Ref LabCodeBucket
          Key: appcode/calculator.zip
  C9IDE:
    DependsOn:
      - CodeCommitRepo
    Type: 'AWS::Cloud9::EnvironmentEC2'
    Properties:
      Name: !Sub '${CodeCommitRepoName}'
      Description: Cloud9 IDE for hands-on lab on developer tools
      AutomaticStopTimeMinutes: 60
      SubnetId: !Ref SubnetId
      InstanceType: t2.micro
      Repositories:
        - RepositoryUrl: !Sub >-
            https://git-codecommit.${AWS::Region}.amazonaws.com/v1/repos/${CodeCommitRepoName}
          PathComponent: Lab6
  CloudFormationTrustRole:
    Description: Creating service role in IAM for AWS CloudFormation
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - 'iam:CreateInstanceProfile'
                  - 'iam:DeleteInstanceProfile'
                  - 'iam:GetRole'
                  - 'iam:GetInstanceProfile' 
                  - 'iam:RemoveRoleFromInstanceProfile'
                  - 'iam:UpdateRoleDescription' 
                  - 'iam:CreateRole'
                  - 'iam:DeleteRole'
                  - 'iam:AttachRolePolicy'
                  - 'iam:PutRolePolicy'
                  - 'iam:ListInstanceProfiles'
                  - 'iam:AddRoleToInstanceProfile'
                  - 'iam:ListInstanceProfilesForRole'
                  - 'iam:PassRole'
                  - 'iam:DetachRolePolicy'
                  - 'iam:DeleteRolePolicy'
                  - 'iam:ListRolePolicies'
                  - 'iam:ListRoles'
                  - 'iam:GetRolePolicy'
                Effect: Allow
                Resource:
                  - !Sub 'arn:aws:iam::*:role/${AWS::StackName}*'
                  - !Sub 'arn:aws:iam::*:instance-profile/${AWS::StackName}*'
              - Action:
                  - 'iam:CreateServiceLinkedRole' 
                Effect: Allow
                Resource:
                  - 'arn:aws:iam::*:role/aws-service-role/*'
              - Action:
                  - 'ssm:GetParameters'
                  - 'autoscaling:*'
                  - 'ec2:*'
                  - 'codedeploy:*'
                  - 'elasticloadbalancing:*'
                Effect: Allow
                Resource:
                  - '*'
          PolicyName: !Join 
            - '-'
            - - !Ref 'AWS::StackName'
              - CloudFormationRolePolicy
      RoleName: !Join 
        - '-'
        - - !Ref 'AWS::StackName'
          - CloudFormation
    Type: 'AWS::IAM::Role'
  LambdaCodePipelineExecutionPolicy:
    DependsOn:
      - CloudFormationTrustRole
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: LambdaRolePolicy
      Roles:
        - !Ref CodePipelineLambdaRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'logs:*'
            Resource:
              - 'arn:aws:logs:*:*:*'
          - Effect: Allow
            Action:
              - 'codepipeline:PutJobSuccessResult'
              - 'codepipeline:PutJobFailureResult'
              - 's3:*'
              - 'ec2:*'
              - 'cloudformation:*'
              - 'xray:*'
            Resource:
              - '*'
          - Effect: Allow
            Action:
              - 'dynamodb:*'
            Resource:
              - '*'
          - Effect: Allow
            Action:
              - 'sns:*'
            Resource:
              - '*'
  CodeBuildPolicy:
    Description: Setting IAM policy for service role for CodeBuild
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Effect: Allow
            Resource: '*'
          - Action:
              - 's3:PutObject'
              - 's3:GetObject'
              - 's3:GetObjectVersion'
            Effect: Allow
            Resource:
              - !Join 
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref ArtifactsBucket
              - !Join 
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref ArtifactsBucket
                  - /*
              - !Join 
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref CacheBucket
              - !Join 
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref CacheBucket
                  - /*
          - Action:
              - 'codecommit:GitPull'
            Effect: Allow
            Resource:
              - !Join 
                - ':'
                - - arn
                  - aws
                  - codecommit
                  - !Ref 'AWS::Region'
                  - !Ref 'AWS::AccountId'
                  - !Ref CodeCommitRepoName
          - Action:
              - 'kms:GenerateDataKey*'
              - 'kms:Encrypt'
              - 'kms:Decrypt'
            Effect: Allow
            Resource:
              - !Join 
                - ':'
                - - 'arn:aws:kms'
                  - !Ref 'AWS::Region'
                  - !Ref 'AWS::AccountId'
                  - !Join 
                    - /
                    - - alias
                      - aws/s3
      PolicyName: !Join 
        - '-'
        - - !Ref 'AWS::StackName'
          - CodeBuildPolicy
      Roles:
        - !Ref CodeBuildRole
    Type: 'AWS::IAM::Policy'
  CodeBuildProject:
    DependsOn:
      - CodeBuildPolicy
    Properties:
      Artifacts:
        Location: !Ref ArtifactsBucket
        Name: build-output.zip
        NamespaceType: BUILD_ID
        Packaging: ZIP
        Path: codebuild
        Type: S3
      Cache:
        Location: !Ref CacheBucket
        Type: S3
      Description: !Join 
        - ''
        - - 'CodeBuild Project for '
          - !Ref 'AWS::StackName'
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/nodejs:8.11.0'
        Type: LINUX_CONTAINER
      Name: !Ref 'AWS::StackName'
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODECOMMIT
        Location: !Join 
          - ''
          - - 'https://git-codecommit.'
            - !Ref 'AWS::Region'
            - .amazonaws.com/v1/repos/
            - !Ref CodeCommitRepoName
        BuildSpec: buildspecs/build-with-cache.yml
    Type: 'AWS::CodeBuild::Project'
  CodeBuildRole:
    Description: Creating service role in IAM for AWS CodeBuild
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
      Path: /
      RoleName: !Join 
        - '-'
        - - !Ref 'AWS::StackName'
          - CodeBuild
    Type: 'AWS::IAM::Role'
  CodePipelineLambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
  CodePipelineTrustRole:
    Description: Creating service role in IAM for AWS CodePipeline
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Sid: 1
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:GetBucketVersioning'
                  - 's3:PutObject'
                Effect: Allow
                Resource:
                  - !Join 
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref ArtifactsBucket
                  - !Join 
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref ArtifactsBucket
                      - /*
              - Action:
                  - 'codecommit:CancelUploadArchive'
                  - 'codecommit:GetBranch'
                  - 'codecommit:GetCommit'
                  - 'codecommit:GetUploadArchiveStatus'
                  - 'codecommit:UploadArchive'
                Effect: Allow
                Resource:
                  - !Join 
                    - ':'
                    - - arn
                      - aws
                      - codecommit
                      - !Ref 'AWS::Region'
                      - !Ref 'AWS::AccountId'
                      - !Ref CodeCommitRepoName
              - Action:
                  - 'codebuild:StartBuild'
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StopBuild'
                Effect: Allow
                Resource:
                  - !GetAtt CodeBuildProject.Arn
              - Action:
                  - 'codedeploy:CreateDeployment'
                  - 'codedeploy:GetApplicationRevision'
                  - 'codedeploy:GetDeployment'
                  - 'codedeploy:GetDeploymentConfig'
                  - 'codedeploy:RegisterApplicationRevision'
                Effect: Allow
                Resource:
                  - !Join 
                    - ':'
                    - - arn
                      - aws
                      - codedeploy
                      - !Ref 'AWS::Region'
                      - !Ref 'AWS::AccountId'
                      - deploymentgroup
                      - !Join 
                        - ''
                        - - !Ref 'AWS::StackName'
                          - '*'
                  - !Join 
                    - ':'
                    - - arn
                      - aws
                      - codedeploy
                      - !Ref 'AWS::Region'
                      - !Ref 'AWS::AccountId'
                      - application
                      - !Join 
                        - ''
                        - - !Ref 'AWS::StackName'
                          - '*'
                  - !Join 
                    - ':'
                    - - arn
                      - aws
                      - codedeploy  
                      - !Ref 'AWS::Region'
                      - !Ref 'AWS::AccountId'
                      - deploymentconfig
                      - '*'
              - Action:
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:DeleteStack'
                  - 'cloudformation:UpdateStack'
                  - 'cloudformation:CreateChangeSet'
                  - 'cloudformation:ExecuteChangeSet'
                  - 'cloudformation:DeleteChangeSet'
                  - 'cloudformation:DescribeChangeSet'
                  - 'cloudformation:SetStackPolicy'
                Effect: Allow
                Resource:
                  - !Join 
                    - ':'
                    - - arn
                      - aws
                      - cloudformation
                      - !Ref 'AWS::Region'
                      - !Ref 'AWS::AccountId'
                      - !Join 
                        - /
                        - - stack
                          - !Join 
                            - '-'
                            - - !Ref 'AWS::StackName'
                              - '*'
              - Action:
                  - 'iam:PassRole'
                Effect: Allow
                Resource:
                  - !GetAtt 
                    - CloudFormationTrustRole
                    - Arn
              - Action:
                  - 'lambda:InvokeFunction'
                Effect: Allow
                Resource: '*'
          PolicyName: !Join 
            - '-'
            - - !Ref 'AWS::StackName'
              - CodePipelineRolePolicy
      RoleName: !Join 
        - '-'
        - - !Ref 'AWS::StackName'
          - CodePipeline
    Type: 'AWS::IAM::Role'
  CFNValidateLambda:
    Type: 'AWS::Lambda::Function'
    DependsOn:
      - CodePipelineLambdaRole
      - LambdaCodePipelineExecutionPolicy
      - myDynamoDBTable
    Properties:
      Code:
        S3Bucket: !Ref LabCodeBucket
        S3Key: !Ref LambdaS3Key
      Role: !GetAtt 
        - CodePipelineLambdaRole
        - Arn
      Description: Always return success
      Timeout: 60
      Handler: cfn_validate_lambda.lambda_handler
      Runtime: python3.7
      TracingConfig: 
        Mode: Active 
  servicestatus:
    Type: 'AWS::Lambda::Function'
    DependsOn:
      - CodePipelineLambdaRole
      - LambdaCodePipelineExecutionPolicy
    Properties:
      Code:
        S3Bucket: !Ref LabCodeBucket
        S3Key: !Ref LambdaS3Key
      Role: !GetAtt 
        - CodePipelineLambdaRole
        - Arn
      Description: Always return success
      Timeout: 60
      Handler: index.handler
      Runtime: nodejs10.x
      TracingConfig: 
        Mode: Active 
  ReleasePipeline:
    DependsOn:
      - CodePipelineTrustRole
      - ArtifactsBucket
      - CodeBuildProject
      - CloudFormationTrustRole
    Description: Creating a deployment pipeline for your project in AWS CodePipeline
    Properties:
      ArtifactStore:
        Location: !Ref ArtifactsBucket
        Type: S3
      Name: !Ref 'AWS::StackName'
      RoleArn: !GetAtt 
        - CodePipelineTrustRole
        - Arn
      Stages:
        - Name: Source
          Actions:
            - ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: '1'
              Configuration:
                BranchName: master
                PollForSourceChanges: false
                RepositoryName: !Ref CodeCommitRepoName
              InputArtifacts: []
              Name: ApplicationSource
              OutputArtifacts:
                - Name: !Join 
                    - '-'
                    - - !Ref 'AWS::StackName'
                      - SourceArtifact
              RunOrder: 1
        - Name: static_check
          Actions:
            - ActionTypeId:
                Category: Invoke
                Owner: AWS
                Provider: Lambda
                Version: '1'
              Configuration:
                FunctionName: !Ref CFNValidateLambda
                UserParameters: !Sub >-
                  {"input": "${AWS::StackName}-SourceArtifact",
                  "file":"cloudformation/application.json","output":
                  "${ArtifactsBucket}"}
              InputArtifacts:
                - Name: !Join 
                    - '-'
                    - - !Ref 'AWS::StackName'
                      - SourceArtifact
              OutputArtifacts:
                - Name: TemplateSource2
              Name: stack_validate
              Region: !Ref 'AWS::Region'
              RunOrder: 1
        - Name: Build
          Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref 'AWS::StackName'
              InputArtifacts:
                - Name: !Join 
                    - '-'
                    - - !Ref 'AWS::StackName'
                      - SourceArtifact
              Name: Build
              OutputArtifacts:
                - Name: !Join 
                    - '-'
                    - - !Ref 'AWS::StackName'
                      - BuildArtifact
              RunOrder: 1
        - Name: Shared_Resources
          Actions:
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_IAM
                ChangeSetName: shared-resources-changeset
                ParameterOverrides: !Join 
                  - ''
                  - - '{"DeploymentBucket":"'
                    - !Ref ArtifactsBucket
                    - '"}'
                RoleArn: !GetAtt 
                  - CloudFormationTrustRole
                  - Arn
                StackName: !Join 
                  - '-'
                  - - !Ref 'AWS::StackName'
                    - shared-resources
                TemplatePath: !Join 
                  - ''
                  - - !Ref 'AWS::StackName'
                    - '-BuildArtifact'
                    - '::cloudformation/shared-resources.yml'
              InputArtifacts:
                - Name: !Join 
                    - '-'
                    - - !Ref 'AWS::StackName'
                      - BuildArtifact
              Name: GenerateChangeSet
              OutputArtifacts: []
              RunOrder: 1
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: shared-resources-changeset
                StackName: !Join 
                  - '-'
                  - - !Ref 'AWS::StackName'
                    - shared-resources
              InputArtifacts: []
              Name: ExecuteChangeSet
              OutputArtifacts: []
              RunOrder: 2
        - Name: Test_Stack
          Actions:
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_IAM
                ChangeSetName: test-stack-changeset
                ParameterOverrides: !Join 
                  - ''
                  - - '{"SharedResourceStack":"'
                    - !Join 
                      - '-'
                      - - !Ref 'AWS::StackName'
                        - shared-resources
                    - '", "Stage":"Test"}'
                RoleArn: !GetAtt 
                  - CloudFormationTrustRole
                  - Arn
                StackName: !Join 
                  - '-'
                  - - !Ref 'AWS::StackName'
                    - test-stack
                TemplatePath: !Join 
                  - ''
                  - - !Ref 'AWS::StackName'
                    - '-BuildArtifact'
                    - '::cloudformation/application.json'
              InputArtifacts:
                - Name: !Join 
                    - '-'
                    - - !Ref 'AWS::StackName'
                      - BuildArtifact
              Name: GenerateChangeSet
              OutputArtifacts: []
              RunOrder: 1
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: test-stack-changeset
                StackName: !Join 
                  - '-'
                  - - !Ref 'AWS::StackName'
                    - test-stack
              InputArtifacts: []
              Name: ExecuteChangeSet
              OutputArtifacts: []
              RunOrder: 2
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CodeDeploy
                Version: '1'
              Configuration:
                ApplicationName: !Join 
                  - '-'
                  - - !Ref 'AWS::StackName'
                    - shared-resources
                DeploymentGroupName: !Join 
                  - '-'
                  - - !Ref 'AWS::StackName'
                    - test-stack
                    - DeploymentGroup
              InputArtifacts:
                - Name: !Join 
                    - '-'
                    - - !Ref 'AWS::StackName'
                      - BuildArtifact
              Name: Deploy
              OutputArtifacts: []
              RunOrder: 3
        - Name: Check_Service_Stauts
          Actions:
            - ActionTypeId:
                Category: Invoke
                Owner: AWS
                Provider: Lambda
                Version: '1'
              Configuration:
                FunctionName: !Ref servicestatus
                UserParameters: !Sub >-
                  http://aws-c-loadb-kimgeue2a7x4-957205397.${AWS::Region}.elb.amazonaws.com
              InputArtifacts:
                - Name: !Join 
                    - '-'
                    - - !Ref 'AWS::StackName'
                      - SourceArtifact
              Name: Test_Status
              OutputArtifacts: []
              Region: !Ref 'AWS::Region'
              RunOrder: 1
        - Name: Aprroval
          Actions:
            - ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              Configuration:
                CustomData: >-
                  Do you want to purge Test region resources and initiate
                  Production deployment ?
              InputArtifacts: []
              Name: Purge_Test
              OutputArtifacts: []
              Region: !Ref 'AWS::Region'
              RunOrder: 1
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: DELETE_ONLY
                RoleArn: !GetAtt CloudFormationTrustRole.Arn
                StackName: !Sub '${AWS::StackName}-test-stack'
              InputArtifacts: []
              Name: Delete_Test_Stack
              OutputArtifacts: []
              Region: !Ref 'AWS::Region'
              RunOrder: 2
        - Name: Prod_Stack
          Actions:
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_IAM
                ChangeSetName: prod-stack-changeset
                ParameterOverrides: !Join 
                  - ''
                  - - '{"SharedResourceStack":"'
                    - !Join 
                      - '-'
                      - - !Ref 'AWS::StackName'
                        - shared-resources
                    - '", "Stage":"Prod"}'
                RoleArn: !GetAtt 
                  - CloudFormationTrustRole
                  - Arn
                StackName: !Join 
                  - '-'
                  - - !Ref 'AWS::StackName'
                    - prod-stack
                TemplatePath: !Join 
                  - ''
                  - - !Ref 'AWS::StackName'
                    - '-BuildArtifact'
                    - '::cloudformation/application.json'
              InputArtifacts:
                - Name: !Join 
                    - '-'
                    - - !Ref 'AWS::StackName'
                      - BuildArtifact
              Name: GenerateChangeSet
              OutputArtifacts: []
              RunOrder: 1
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: prod-stack-changeset
                StackName: !Join 
                  - '-'
                  - - !Ref 'AWS::StackName'
                    - prod-stack
              InputArtifacts: []
              Name: ExecuteChangeSet
              OutputArtifacts: []
              RunOrder: 2
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CodeDeploy
                Version: '1'
              Configuration:
                ApplicationName: !Join 
                  - '-'
                  - - !Ref 'AWS::StackName'
                    - shared-resources
                DeploymentGroupName: !Join 
                  - '-'
                  - - !Ref 'AWS::StackName'
                    - prod-stack
                    - DeploymentGroup
              InputArtifacts:
                - Name: !Join 
                    - '-'
                    - - !Ref 'AWS::StackName'
                      - BuildArtifact
              Name: Deploy
              OutputArtifacts: []
              RunOrder: 3
    Type: 'AWS::CodePipeline::Pipeline'
  ArtifactBucketPolicy:
    Description: Setting Amazon S3 bucket policy for AWS CodePipeline access
    Properties:
      Bucket: !Ref ArtifactsBucket
      PolicyDocument:
        Id: SSEAndSSLPolicy
        Statement:
          - Action:
              - 's3:GetObject'
              - 's3:GetObjectVersion'
              - 's3:GetBucketVersioning'
            Condition:
              Bool:
                'aws:SecureTransport': false
            Effect: Allow
            Principal:
              AWS:
                - !GetAtt 
                  - CodePipelineTrustRole
                  - Arn
                - !GetAtt 
                  - CodeBuildRole
                  - Arn
                - !GetAtt 
                  - CloudFormationTrustRole
                  - Arn
            Resource:
              - !Join 
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref ArtifactsBucket
              - !Join 
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref ArtifactsBucket
                  - /*
            Sid: WhitelistedGet
          - Action:
              - 's3:PutObject'
            Effect: Allow
            Principal:
              AWS:
                - !GetAtt 
                  - CodePipelineTrustRole
                  - Arn
                - !GetAtt 
                  - CodeBuildRole
                  - Arn
            Resource:
              - !Join 
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref ArtifactsBucket
              - !Join 
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref ArtifactsBucket
                  - /*
            Sid: WhitelistedPut
        Version: 2012-10-17
    Type: 'AWS::S3::BucketPolicy'
  ArtifactsBucket:
    DeletionPolicy: Delete
    Description: Creating Amazon S3 bucket for AWS CodePipeline and CodeBuild artifacts
    Properties:
      Tags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref 'AWS::StackName'
              - ArtifactsBucket
      VersioningConfiguration:
        Status: Enabled
    Type: 'AWS::S3::Bucket'
  CacheBucket:
    DeletionPolicy: Delete
    Description: Creating Amazon S3 bucket for CodeBuild caching
    Properties:
      Tags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref 'AWS::StackName'
              - CacheBucket
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 30
            Status: Enabled
    Type: 'AWS::S3::Bucket'
  myDynamoDBTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      AttributeDefinitions:
        - AttributeName: rule
          AttributeType: S
      KeySchema:
        - AttributeName: rule
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: '5'
        WriteCapacityUnits: '5'
      TableName: lab6DDBRules
  SourceEvent:
    Properties:
      Description: >-
        Rule for Amazon CloudWatch Events to detect changes to the source
        repository and trigger pipeline execution
      EventPattern:
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceName:
            - master
          referenceType:
            - branch
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !Join 
            - ':'
            - - 'arn:aws:codecommit'
              - !Ref 'AWS::Region'
              - !Ref 'AWS::AccountId'
              - !Ref CodeCommitRepoName
        source:
          - aws.codecommit
      Name: !Join 
        - '-'
        - - !Ref 'AWS::StackName'
          - SourceEvent
      State: ENABLED
      Targets:
        - Arn: !Join 
            - ':'
            - - arn
              - aws
              - codepipeline
              - !Ref 'AWS::Region'
              - !Ref 'AWS::AccountId'
              - !Ref 'AWS::StackName'
          Id: ProjectPipelineTarget
          RoleArn: !GetAtt SourceEventRole.Arn
    Type: 'AWS::Events::Rule'
  SourceEventRole:
    Description: >-
      IAM role to allow Amazon CloudWatch Events to trigger AWS CodePipeline
      execution
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Sid: 1
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - 'codepipeline:StartPipelineExecution'
                Effect: Allow
                Resource:
                  - !Join 
                    - ':'
                    - - arn
                      - aws
                      - codepipeline
                      - !Ref 'AWS::Region'
                      - !Ref 'AWS::AccountId'
                      - !Ref 'AWS::StackName'
          PolicyName: !Join 
            - '-'
            - - !Ref 'AWS::StackName'
              - CloudWatchEventPolicy
      RoleName: !Join 
        - '-'
        - - !Ref 'AWS::StackName'
          - CloudWatchEventRule
    Type: 'AWS::IAM::Role'

